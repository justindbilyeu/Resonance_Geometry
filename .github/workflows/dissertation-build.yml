name: dissertation-build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Ensure local bin on PATH for tools we install without sudo
      - name: Export local bin to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install pandoc + latex fallback
      - name: Install Pandoc & minimal TeX fallback
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-latex-base texlive-fonts-recommended texlive-latex-recommended

      # Prefer Tectonic (fast, reproducible). Network can be flaky; retry + graceful fallback.
      - name: Install Tectonic (with retries; graceful fallback)
        id: tectonic
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.local/bin"
          echo "[ci] Installing Tectonic (retrying on transient DNS)..."
          if curl -fsSL --retry 5 --retry-delay 5 https://get.tectonic.dev | sh ; then
            if [[ -x "./tectonic" ]]; then
              mv ./tectonic "$HOME/.local/bin/tectonic"
              echo "tectonic_installed=true" >> $GITHUB_OUTPUT
              echo "$HOME/.local/bin" >> $GITHUB_PATH
              echo "[ci] ✅ Tectonic installed"
            else
              echo "tectonic_installed=false" >> $GITHUB_OUTPUT
              echo "[ci] ⚠️ Installer ran but did not produce a binary; will use xelatex."
            fi
          else
            echo "tectonic_installed=false" >> $GITHUB_OUTPUT
            echo "[ci] ⚠️ Could not fetch Tectonic after retries; will use xelatex."
          fi

      # Build dissertation (Pandoc -> PDF/HTML). Use tectonic if present; else xelatex.
      - name: Build dissertation (PDF & HTML)
        shell: bash
        run: |
          set -euo pipefail
          chmod +x ./scripts/build_dissertation.sh
          if [[ "${{ steps.tectonic.outputs.tectonic_installed || 'false' }}" == "true" ]]; then
            export RG_TEX_ENGINE=tectonic
          else
            export RG_TEX_ENGINE=xelatex
          fi
          ./scripts/build_dissertation.sh

      # Upload artifacts if they exist (avoid failing when paths are absent)
      - name: Upload dissertation artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: dissertation-artifacts
          path: |
            docs/build/dissertation.pdf
            docs/build/dissertation.html
          if-no-files-found: warn
